@using IhtApcWebServer.Services
@inject UnitService UnitService


@if (UnitService != null)
{
    <MudText Typo="Typo.h5">UnitSelector</MudText>

    <MudRadioGroup T="bool" SelectedOption="@UnitService.IsPressureBar" SelectedOptionChanged="@PressureUnitChanged">
        <MudRadio Option="true" Color="Color.Primary" >Pressure in BAR</MudRadio>
        <MudRadio Option="false" Color="Color.Secondary">Pressure in PSI</MudRadio>
    </MudRadioGroup>

    <MudRadioGroup T="bool" SelectedOption="@UnitService.IsDistanceMetric" SelectedOptionChanged="@DistanceUnitChanged">
        <MudRadio Option="true" Color="Color.Primary" >Distance in metric</MudRadio>
        <MudRadio Option="false" Color="Color.Secondary">Distance in imperial</MudRadio>
    </MudRadioGroup>
}

@code {

    protected override async Task OnInitializedAsync()
    {
        await UnitService.EnsureInitializedAsync();
        await base.OnInitializedAsync();
    }

    protected async Task PressureUnitChanged(bool isBar)
    {
        if (isBar == UnitService.IsPressureBar)
            return;

        await UnitService.SetPressureUnitAsync(isBar);
    }

    protected async Task DistanceUnitChanged(bool isMetric)
    {
        if (isMetric == UnitService.IsDistanceMetric)
            return;

        await UnitService.SetDistanceUnitAsync(isMetric);
    }
}
