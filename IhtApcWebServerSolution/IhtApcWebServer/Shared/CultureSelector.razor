@using  System.Globalization
@inject NavigationManager Nav
@inherits IhtComponentBase

<style>
.my-install-toarch .mud-input > input.mud-input-root, div.mud-input-slot.mud-input-root {
    padding: 12px 10px !important;
    font-size: 18px
}
</style>
@*<p style="font-size: medium;">
    <label>
        <select @bind="Culture">
            @foreach (var culture in supportedCultures)
            {
                <option value="@culture">
                    <img draggable="false" src="@T["_CultureLanguageImage"]" style="mix-blend-mode: normal; width: 25px; height: 35px; vertical-align: middle;" /> 
                    @culture.NativeName</option>
            }
        </select>
    </label>
</p>*@


<MudSelect @bind-Value="@CurrUICulture" Label="Language" Variant="Variant.Outlined">
    @foreach (var culture in supportedCultures)
    {
        var languageName = @culture.EnglishName.Split()[0];

        <MudSelectItem Value="@culture">
            <img src="@($"Images/Culture/{@languageName}.gif")" style="mix-blend-mode: normal; width: 35px; height: 20px; vertical-align: middle;" /> @languageName
        </MudSelectItem>
    }
</MudSelect>


@code
{
    private CultureInfo[] supportedCultures = new[]
    {
        new CultureInfo("de-DE"),
        new CultureInfo("en-US"),      
        new CultureInfo("fr-FR"),
        new CultureInfo("hu-HU"),
        new CultureInfo("it-IT"),      
        new CultureInfo("nl-NL"),
        new CultureInfo("sl-SI"),
        new CultureInfo("zH-Hans"),
    };

    protected override void OnInitialized()
    {
        CurrUICulture = CultureInfo.CurrentUICulture;
    }

    private CultureInfo CurrUICulture
    {
        get => CultureInfo.CurrentUICulture;
        set
        {
            if (CultureInfo.CurrentUICulture != value)
            {
                var uri = new Uri(Nav.Uri)
                    .GetComponents(UriComponents.PathAndQuery, UriFormat.Unescaped);
                var cultureEscaped = Uri.EscapeDataString(value.Name);
                var uriEscaped = Uri.EscapeDataString(uri);

                Nav.NavigateTo(
                    $"Culture/Set?newCulture={cultureEscaped}&redirectUri={uriEscaped}",
                    forceLoad: true);
            }
        }
    }
}