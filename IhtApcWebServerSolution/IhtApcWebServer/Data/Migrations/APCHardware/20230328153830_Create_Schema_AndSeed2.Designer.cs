// <auto-generated />
using System;
using IhtApcWebServer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IhtApcWebServer.Data.Migrations.APCHardware
{
    [DbContext(typeof(APCHardwareDBContext))]
    [Migration("20230328153830_Create_Schema_AndSeed2")]
    partial class Create_Schema_AndSeed2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.APCDevice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Num")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("APCDevices");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7d96047a-d2d6-45d7-96a1-bdb2fd585ac4"),
                            Name = "APCDevice_1",
                            Num = 1
                        },
                        new
                        {
                            Id = new Guid("62d17612-ec74-4c41-a3bc-c70b51a65813"),
                            Name = "APCDevice_2",
                            Num = 2
                        },
                        new
                        {
                            Id = new Guid("dc81a4d9-7ea3-4ee8-a53e-0caec295b57a"),
                            Name = "APCDevice_3",
                            Num = 3
                        },
                        new
                        {
                            Id = new Guid("52862abc-88bf-4207-94d6-228a211a85e1"),
                            Name = "APCDevice_4",
                            Num = 4
                        },
                        new
                        {
                            Id = new Guid("13a3b1ce-59b6-4ef2-a7d2-5e071bde172c"),
                            Name = "APCDevice_5",
                            Num = 5
                        },
                        new
                        {
                            Id = new Guid("cbaa8871-7051-4277-895c-e4aab0c895e7"),
                            Name = "APCDevice_6",
                            Num = 6
                        },
                        new
                        {
                            Id = new Guid("26c71ba3-b449-45b4-8c13-2559b6579baf"),
                            Name = "APCDevice_7",
                            Num = 7
                        },
                        new
                        {
                            Id = new Guid("bcf8822c-3d4d-41fd-9031-7709f8cd24ba"),
                            Name = "APCDevice_8",
                            Num = 8
                        },
                        new
                        {
                            Id = new Guid("7d59bcf7-c0f2-467d-9a93-02e1e5ee7395"),
                            Name = "APCDevice_9",
                            Num = 9
                        },
                        new
                        {
                            Id = new Guid("fd3f0c49-68fa-40ad-ba9f-23e31798b6d2"),
                            Name = "APCDevice_10",
                            Num = 10
                        });
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ConfigSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Baudrate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ComPort")
                        .HasColumnType("TEXT");

                    b.Property<string>("ComPortLast")
                        .HasColumnType("TEXT");

                    b.Property<string>("CultureStr")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DataBaseGuid")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DataBaseId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DataBaseMaterialSelectedIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DataBaseNozzleSelectedIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DataBaseThicknessSelectedIndex")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DataBits")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("ExecReset")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Identifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("IpAddr")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LengthUnit")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Mode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Parity")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PressureUnit")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StopBits")
                        .HasColumnType("TEXT");

                    b.Property<string>("TcpPort")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("TorchEnabled_01")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchEnabled_02")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchEnabled_03")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchEnabled_04")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchEnabled_05")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchEnabled_06")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchEnabled_07")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchEnabled_08")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchEnabled_09")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchEnabled_10")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchInstalled_01")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchInstalled_02")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchInstalled_03")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchInstalled_04")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchInstalled_05")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchInstalled_06")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchInstalled_07")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchInstalled_08")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchInstalled_09")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchInstalled_10")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TorchType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ConfigSettings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("48f8a717-1fbb-425e-81dc-cd5402319134")
                        });
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ConstParams", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Max")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Min")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Step")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ConstParams");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.DynParams", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Address")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ConstParamsId")
                        .HasColumnType("TEXT");

                    b.Property<int>("ParamId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ParameterDataInfoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ConstParamsId");

                    b.HasIndex("ParameterDataInfoId");

                    b.ToTable("DynParams");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ErrorLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("ErrorCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("Params")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SlaveId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ErrorLogs");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.LiveParams", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("ParamId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ParameterDataInfoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParameterDataInfoId");

                    b.ToTable("LiveParams");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ParameterData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("APCDeviceId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DynParamsId")
                        .HasColumnType("TEXT");

                    b.Property<int>("ParamGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ParamName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("APCDeviceId");

                    b.HasIndex("DynParamsId");

                    b.ToTable("ParameterDatas");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ParameterDataInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Format")
                        .HasColumnType("TEXT");

                    b.Property<string>("MaxDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("MinDescription")
                        .HasColumnType("TEXT");

                    b.Property<double>("Multiplier")
                        .HasColumnType("REAL");

                    b.Property<string>("StepDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("Unit")
                        .HasColumnType("TEXT");

                    b.Property<string>("ValueDescription")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ParameterDataInfos");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ParamSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ParamId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParamOrder")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ParamViewGroupId")
                        .HasColumnType("TEXT");

                    b.Property<int>("PasswordLevel")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParamViewGroupId");

                    b.ToTable("ParamSettings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b6cdcbfc-631f-48ab-9611-e1a3ce3de6be"),
                            ClientId = "default",
                            ParamId = "TactileInitialPosFinding",
                            ParamOrder = 1,
                            ParamViewGroupId = "HeightCalibration",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("305b9dfa-6804-4219-9aae-716c0a66e41e"),
                            ClientId = "default",
                            ParamId = "DistanceCalibration",
                            ParamOrder = 2,
                            ParamViewGroupId = "HeightCalibration",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("c0d583db-6982-499d-9365-0e07f53510c1"),
                            ClientId = "default",
                            ParamId = "LinearDrivePosition",
                            ParamOrder = 3,
                            ParamViewGroupId = "HeightCalibration",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("6d7cc6cc-f486-4da3-a87b-3df01b500cec"),
                            ClientId = "default",
                            ParamId = "CalibrationValid",
                            ParamOrder = 4,
                            ParamViewGroupId = "HeightCalibration",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("c336e563-e5dc-432d-a31b-82b9b1adbaad"),
                            ClientId = "default",
                            ParamId = "CalibrationActive",
                            ParamOrder = 5,
                            ParamViewGroupId = "HeightCalibration",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("cafd7f59-ff91-433f-aa63-7d71e1e45470"),
                            ClientId = "default",
                            ParamId = "RetractHeight",
                            ParamOrder = 1,
                            ParamViewGroupId = "RetractPosition",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("cf93ce3d-cfe8-41ce-b006-a7c3d0b70652"),
                            ClientId = "default",
                            ParamId = "RetractPosAtProcessEnd",
                            ParamOrder = 2,
                            ParamViewGroupId = "RetractPosition",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("81b0329d-fa5c-4036-991d-f1b22d0ace62"),
                            ClientId = "default",
                            ParamId = "SlagSensitivity",
                            ParamOrder = 1,
                            ParamViewGroupId = "Slag",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("141ffbbc-d8b4-4989-9c90-94c9dbb3dc7d"),
                            ClientId = "default",
                            ParamId = "SlagPostTime",
                            ParamOrder = 2,
                            ParamViewGroupId = "Slag",
                            PasswordLevel = 1
                        },
                        new
                        {
                            Id = new Guid("0cc6bc0d-397b-49f1-863c-dfd9190f8ad6"),
                            ClientId = "default",
                            ParamId = "SlagCuttingSpeedReduction",
                            ParamOrder = 3,
                            ParamViewGroupId = "Slag",
                            PasswordLevel = 2
                        },
                        new
                        {
                            Id = new Guid("923f06c9-3e24-40a8-ae85-49bc03876622"),
                            ClientId = "default",
                            ParamId = "CutO2Blowout",
                            ParamOrder = 1,
                            ParamViewGroupId = "PreFlow",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("6413b227-3401-461d-a9c7-6a7217b45272"),
                            ClientId = "default",
                            ParamId = "CutO2BlowoutBreak",
                            ParamOrder = 2,
                            ParamViewGroupId = "PreFlow",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("fa593295-4a8a-4501-9b43-473ac0cc9ac8"),
                            ClientId = "default",
                            ParamId = "CutO2BlowoutActive",
                            ParamOrder = 3,
                            ParamViewGroupId = "PreFlow",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("6f1f41db-be39-4fd1-9be8-78dd58f78cf7"),
                            ClientId = "default",
                            ParamId = "CurrCutO2BlowoutTime",
                            ParamOrder = 4,
                            ParamViewGroupId = "PreFlow",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("cb043ec4-f8d9-405f-b592-3d2dd8db3bd3"),
                            ClientId = "default",
                            ParamId = "CutO2BlowOutTime",
                            ParamOrder = 5,
                            ParamViewGroupId = "PreFlow",
                            PasswordLevel = 1
                        },
                        new
                        {
                            Id = new Guid("0cc9ba85-4fff-4593-8364-54fbfe717293"),
                            ClientId = "default",
                            ParamId = "CutO2BlowOutPressure",
                            ParamOrder = 6,
                            ParamViewGroupId = "PreFlow",
                            PasswordLevel = 1
                        },
                        new
                        {
                            Id = new Guid("c8926dc7-d4e4-49b8-8596-8fa9d85e0a41"),
                            ClientId = "default",
                            ParamId = "CutO2BlowOutTimeOut",
                            ParamOrder = 7,
                            ParamViewGroupId = "PreFlow",
                            PasswordLevel = 1
                        },
                        new
                        {
                            Id = new Guid("bb124774-fa1e-4bed-bf5e-c97902366f1a"),
                            ClientId = "default",
                            ParamId = "PiercingSensorMode",
                            ParamOrder = 1,
                            ParamViewGroupId = "Piercing",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("2c808f68-84b9-4b4a-92d4-2c4805e8a535"),
                            ClientId = "default",
                            ParamId = "Dynamic",
                            ParamOrder = 1,
                            ParamViewGroupId = "HeightControl",
                            PasswordLevel = 1
                        },
                        new
                        {
                            Id = new Guid("0635d04d-9891-46ed-b0cd-f838240798d5"),
                            ClientId = "default",
                            ParamId = "HeightControlActive",
                            ParamOrder = 2,
                            ParamViewGroupId = "HeightControl",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("386fdfec-1fa4-424e-9094-c4aca2c11739"),
                            ClientId = "default",
                            ParamId = "LinearDrivePosition",
                            ParamOrder = 3,
                            ParamViewGroupId = "HeightControl",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("0ed77424-6645-43bb-8525-eea49161fe39"),
                            ClientId = "default",
                            ParamId = "StatusHeightControl",
                            ParamOrder = 4,
                            ParamViewGroupId = "HeightControl",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("6d05b800-c2f1-44dd-bd93-ecb7c388fa5c"),
                            ClientId = "default",
                            ParamId = "LinearDriveUpSpeedFast",
                            ParamOrder = 5,
                            ParamViewGroupId = "HeightControl",
                            PasswordLevel = 1
                        },
                        new
                        {
                            Id = new Guid("a9789dd7-17de-4bcc-8295-5af305c1c72d"),
                            ClientId = "default",
                            ParamId = "LinearDriveDnSpeedSlow",
                            ParamOrder = 6,
                            ParamViewGroupId = "HeightControl",
                            PasswordLevel = 1
                        },
                        new
                        {
                            Id = new Guid("5a25deeb-20c6-404b-a21b-46aeb9a363a9"),
                            ClientId = "default",
                            ParamId = "LinearDriveDnSpeedFast",
                            ParamOrder = 7,
                            ParamViewGroupId = "HeightControl",
                            PasswordLevel = 1
                        },
                        new
                        {
                            Id = new Guid("25e2445b-b804-42f1-880c-7eafd56acab8"),
                            ClientId = "default",
                            ParamId = "LinearDriveUpSpeedSlow",
                            ParamOrder = 8,
                            ParamViewGroupId = "HeightControl",
                            PasswordLevel = 1
                        },
                        new
                        {
                            Id = new Guid("fc00f9d8-1727-41f4-9da1-91f171410ae6"),
                            ClientId = "default",
                            ParamId = "LinearDriveRefSpeed",
                            ParamOrder = 9,
                            ParamViewGroupId = "HeightControl",
                            PasswordLevel = 1
                        },
                        new
                        {
                            Id = new Guid("b8521074-2e20-4836-9bb4-cb97a73ded51"),
                            ClientId = "default",
                            ParamId = "LinearDrivePosSpeed",
                            ParamOrder = 10,
                            ParamViewGroupId = "HeightControl",
                            PasswordLevel = 1
                        },
                        new
                        {
                            Id = new Guid("66b83d99-77e9-487b-8cc7-4c903f67c077"),
                            ClientId = "default",
                            ParamId = "LinearDriveManualPosSpeed",
                            ParamOrder = 11,
                            ParamViewGroupId = "HeightControl",
                            PasswordLevel = 1
                        },
                        new
                        {
                            Id = new Guid("dc07f05c-f202-4eca-b8a5-b1df4f8abc86"),
                            ClientId = "default",
                            ParamId = "PidErrorThresholdDelay",
                            ParamOrder = 12,
                            ParamViewGroupId = "HeightControl",
                            PasswordLevel = 2
                        },
                        new
                        {
                            Id = new Guid("cab16d5b-4b59-4841-bcdb-07aea0e317ed"),
                            ClientId = "default",
                            ParamId = "CapSetpointFlameOffs",
                            ParamOrder = 13,
                            ParamViewGroupId = "HeightControl",
                            PasswordLevel = 1
                        },
                        new
                        {
                            Id = new Guid("2fba09d1-527c-4e08-bef3-7bd37dc61d7d"),
                            ClientId = "default",
                            ParamId = "ToleranceInPosition",
                            ParamOrder = 14,
                            ParamViewGroupId = "HeightControl",
                            PasswordLevel = 1
                        },
                        new
                        {
                            Id = new Guid("962d116d-0efc-442c-b2ee-42d1317e0601"),
                            ClientId = "default",
                            ParamId = "SensorCollisionOutputDisable",
                            ParamOrder = 15,
                            ParamViewGroupId = "HeightControl",
                            PasswordLevel = 1
                        },
                        new
                        {
                            Id = new Guid("290ddfff-ae11-4eee-b631-3e42350242b3"),
                            ClientId = "default",
                            ParamId = "IgnitionDetectionEnable",
                            ParamOrder = 1,
                            ParamViewGroupId = "Ignition",
                            PasswordLevel = 1
                        },
                        new
                        {
                            Id = new Guid("c7a31309-e463-4722-9b3a-b8f1d3811851"),
                            ClientId = "default",
                            ParamId = "IgnitionPreFlowMultiplier",
                            ParamOrder = 2,
                            ParamViewGroupId = "Ignition",
                            PasswordLevel = 2
                        },
                        new
                        {
                            Id = new Guid("a8fe85e0-8fb3-4ab5-b4a3-dac06d09bab1"),
                            ClientId = "default",
                            ParamId = "IgnitionOnDurationTime",
                            ParamOrder = 3,
                            ParamViewGroupId = "Ignition",
                            PasswordLevel = 2
                        },
                        new
                        {
                            Id = new Guid("c801a462-9a41-4939-b9bc-0d553a67afc3"),
                            ClientId = "default",
                            ParamId = "FlashbackSensivitity",
                            ParamOrder = 1,
                            ParamViewGroupId = "Flashback",
                            PasswordLevel = 1
                        },
                        new
                        {
                            Id = new Guid("3abb77d0-52bc-468b-bd11-0bfba77e2474"),
                            ClientId = "default",
                            ParamId = "SensorCollisionDelay",
                            ParamOrder = 1,
                            ParamViewGroupId = "Torch",
                            PasswordLevel = 1
                        },
                        new
                        {
                            Id = new Guid("ceb8a62a-75c8-4ab3-a38d-eafc1977c257"),
                            ClientId = "default",
                            ParamId = "HoseLength",
                            ParamOrder = 2,
                            ParamViewGroupId = "Torch",
                            PasswordLevel = 1
                        },
                        new
                        {
                            Id = new Guid("6f6be26b-b12c-4b20-8418-1693052c42a8"),
                            ClientId = "default",
                            ParamId = "HeatO2PostFlowMultiplier",
                            ParamOrder = 1,
                            ParamViewGroupId = "GasController",
                            PasswordLevel = 2
                        },
                        new
                        {
                            Id = new Guid("47f7a72b-1ac6-4180-86bf-21afc8ad444b"),
                            ClientId = "default",
                            ParamId = "HeatO2PostFlowPressure",
                            ParamOrder = 2,
                            ParamViewGroupId = "GasController",
                            PasswordLevel = 2
                        });
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ParamViewGroup", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GroupOrder")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ParamViewGroups");

                    b.HasData(
                        new
                        {
                            Id = "HeightCalibration",
                            GroupName = "Height Calibration",
                            GroupOrder = 1
                        },
                        new
                        {
                            Id = "RetractPosition",
                            GroupName = "Retract Position",
                            GroupOrder = 2
                        },
                        new
                        {
                            Id = "Slag",
                            GroupName = "Slag",
                            GroupOrder = 3
                        },
                        new
                        {
                            Id = "PreFlow",
                            GroupName = "Pre Flow",
                            GroupOrder = 4
                        },
                        new
                        {
                            Id = "Piercing",
                            GroupName = "Piercing",
                            GroupOrder = 5
                        },
                        new
                        {
                            Id = "HeightControl",
                            GroupName = "Height Control",
                            GroupOrder = 6
                        },
                        new
                        {
                            Id = "Ignition",
                            GroupName = "Ignition",
                            GroupOrder = 7
                        },
                        new
                        {
                            Id = "Flashback",
                            GroupName = "Flashback",
                            GroupOrder = 8
                        },
                        new
                        {
                            Id = "Torch",
                            GroupName = "Torch",
                            GroupOrder = 9
                        },
                        new
                        {
                            Id = "GasController",
                            GroupName = "Gas Controller",
                            GroupOrder = 10
                        },
                        new
                        {
                            Id = "HeightCalibration_client1",
                            GroupName = "Height Calibration",
                            GroupOrder = 1
                        },
                        new
                        {
                            Id = "RetractPosition_client1",
                            GroupName = "Retract Position",
                            GroupOrder = 3
                        },
                        new
                        {
                            Id = "Slag_client1",
                            GroupName = "Slag",
                            GroupOrder = 2
                        },
                        new
                        {
                            Id = "PreFlow_client1",
                            GroupName = "Pre Flow",
                            GroupOrder = 4
                        },
                        new
                        {
                            Id = "Piercing_client1",
                            GroupName = "Piercing",
                            GroupOrder = 5
                        },
                        new
                        {
                            Id = "HeightControl_client1",
                            GroupName = "Height Control",
                            GroupOrder = 6
                        });
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.DynParams", b =>
                {
                    b.HasOne("IhtApcWebServer.Data.Models.APCHardware.ConstParams", "ConstParams")
                        .WithMany("DynParams")
                        .HasForeignKey("ConstParamsId");

                    b.HasOne("IhtApcWebServer.Data.Models.APCHardware.ParameterDataInfo", "ParameterDataInfo")
                        .WithMany("DynParams")
                        .HasForeignKey("ParameterDataInfoId");

                    b.Navigation("ConstParams");

                    b.Navigation("ParameterDataInfo");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.LiveParams", b =>
                {
                    b.HasOne("IhtApcWebServer.Data.Models.APCHardware.ParameterDataInfo", "ParameterDataInfo")
                        .WithMany()
                        .HasForeignKey("ParameterDataInfoId");

                    b.Navigation("ParameterDataInfo");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ParameterData", b =>
                {
                    b.HasOne("IhtApcWebServer.Data.Models.APCHardware.APCDevice", "APCDevice")
                        .WithMany("ParameterDatas")
                        .HasForeignKey("APCDeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IhtApcWebServer.Data.Models.APCHardware.DynParams", "DynParams")
                        .WithMany("ParameterDatas")
                        .HasForeignKey("DynParamsId");

                    b.Navigation("APCDevice");

                    b.Navigation("DynParams");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ParamSettings", b =>
                {
                    b.HasOne("IhtApcWebServer.Data.Models.APCHardware.ParamViewGroup", "ParamViewGroup")
                        .WithMany()
                        .HasForeignKey("ParamViewGroupId");

                    b.Navigation("ParamViewGroup");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.APCDevice", b =>
                {
                    b.Navigation("ParameterDatas");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ConstParams", b =>
                {
                    b.Navigation("DynParams");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.DynParams", b =>
                {
                    b.Navigation("ParameterDatas");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ParameterDataInfo", b =>
                {
                    b.Navigation("DynParams");
                });
#pragma warning restore 612, 618
        }
    }
}
