// <auto-generated />
using System;
using IhtApcWebServer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IhtApcWebServer.Data.Migrations.APCHardware
{
    [DbContext(typeof(APCHardwareDBContext))]
    partial class APCHardwareDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.APCDevice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Num")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("APCDevices");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4a51f634-c0ca-403c-a5dd-aeb6e91127cc"),
                            Name = "APCDevice_1",
                            Num = 1
                        },
                        new
                        {
                            Id = new Guid("9ebd6178-83f1-41c2-af83-e823296cf082"),
                            Name = "APCDevice_2",
                            Num = 2
                        },
                        new
                        {
                            Id = new Guid("a16e83c2-a5d0-4105-8470-e44692e4e0b9"),
                            Name = "APCDevice_3",
                            Num = 3
                        },
                        new
                        {
                            Id = new Guid("a6175539-dd66-4fc2-9e94-2e5224b3113d"),
                            Name = "APCDevice_4",
                            Num = 4
                        },
                        new
                        {
                            Id = new Guid("5c557b78-3819-4a79-894a-a521933eecf0"),
                            Name = "APCDevice_5",
                            Num = 5
                        },
                        new
                        {
                            Id = new Guid("5173aead-908c-4a37-a657-0a152eee03c0"),
                            Name = "APCDevice_6",
                            Num = 6
                        },
                        new
                        {
                            Id = new Guid("c1c34d26-e850-4c9f-b59c-a60a71518b3b"),
                            Name = "APCDevice_7",
                            Num = 7
                        },
                        new
                        {
                            Id = new Guid("bb6f7249-7496-488a-9bcc-c07855856583"),
                            Name = "APCDevice_8",
                            Num = 8
                        },
                        new
                        {
                            Id = new Guid("6a8ee60d-c93b-4328-a005-2eb4c729f277"),
                            Name = "APCDevice_9",
                            Num = 9
                        },
                        new
                        {
                            Id = new Guid("c26ba7d2-c55d-4ae0-9555-e6caa4935421"),
                            Name = "APCDevice_10",
                            Num = 10
                        });
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ConfigSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Baudrate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ComPort")
                        .HasColumnType("TEXT");

                    b.Property<string>("ComPortLast")
                        .HasColumnType("TEXT");

                    b.Property<string>("CultureStr")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DataBaseGuid")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DataBaseMaterialSelectedIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DataBaseNozzleSelectedIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DataBaseThicknessSelectedIndex")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DataBits")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("ExecReset")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Identifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("IpAddr")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LengthUnit")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Mode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Parity")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PressureUnit")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StopBits")
                        .HasColumnType("TEXT");

                    b.Property<string>("TcpPort")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("TorchEnabled_01")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchEnabled_02")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchEnabled_03")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchEnabled_04")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchEnabled_05")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchEnabled_06")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchEnabled_07")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchEnabled_08")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchEnabled_09")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchEnabled_10")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchInstalled_01")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchInstalled_02")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchInstalled_03")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchInstalled_04")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchInstalled_05")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchInstalled_06")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchInstalled_07")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchInstalled_08")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchInstalled_09")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TorchInstalled_10")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TorchType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ConfigSettings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4639e49e-a4ee-4a05-82ce-c7de620d5a19")
                        });
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ConstParams", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Max")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Min")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Step")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ConstParams");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.DynParams", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Address")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ConstParamsId")
                        .HasColumnType("TEXT");

                    b.Property<int>("ParamId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ParameterDataInfoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ConstParamsId");

                    b.HasIndex("ParameterDataInfoId");

                    b.ToTable("DynParams");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ErrorLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descritpion")
                        .HasColumnType("TEXT");

                    b.Property<string>("ErrorCode")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SlaveId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ErrorLogs");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.LiveParams", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("ParamId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ParameterDataInfoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParameterDataInfoId");

                    b.ToTable("LiveParams");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ParameterData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("APCDeviceId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DynParamsId")
                        .HasColumnType("TEXT");

                    b.Property<int>("ParamGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ParamName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("APCDeviceId");

                    b.HasIndex("DynParamsId");

                    b.ToTable("ParameterDatas");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ParameterDataInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Format")
                        .HasColumnType("TEXT");

                    b.Property<string>("MaxDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("MinDescription")
                        .HasColumnType("TEXT");

                    b.Property<double>("Multiplier")
                        .HasColumnType("REAL");

                    b.Property<string>("StepDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("Unit")
                        .HasColumnType("TEXT");

                    b.Property<string>("ValueDescription")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ParameterDataInfos");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ParamSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ParamId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParamOrder")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ParamViewGroupId")
                        .HasColumnType("TEXT");

                    b.Property<int>("PasswordLevel")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParamViewGroupId");

                    b.ToTable("ParamSettings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b3fd7726-87e3-4cbe-9871-1b971caac13f"),
                            ClientId = "default",
                            ParamId = "TactileInitialPosFinding",
                            ParamOrder = 1,
                            ParamViewGroupId = "HeightCalibration",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("3aed02df-b189-4a64-b559-6f707b3fd15d"),
                            ClientId = "default",
                            ParamId = "DistanceCalibration",
                            ParamOrder = 2,
                            ParamViewGroupId = "HeightCalibration",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("8f1be1af-03c7-4711-96eb-06ff260c659b"),
                            ClientId = "default",
                            ParamId = "LinearDrivePosition",
                            ParamOrder = 3,
                            ParamViewGroupId = "HeightCalibration",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("b9c4db38-0f85-4163-84e4-008a50dea3a5"),
                            ClientId = "default",
                            ParamId = "CalibrationValid",
                            ParamOrder = 4,
                            ParamViewGroupId = "HeightCalibration",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("2413adb7-eb0f-4d69-a80c-9050c4640c8f"),
                            ClientId = "default",
                            ParamId = "CalibrationActive",
                            ParamOrder = 5,
                            ParamViewGroupId = "HeightCalibration",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("40b62111-cb5d-4a4b-a941-625b6c8c0be3"),
                            ClientId = "default",
                            ParamId = "RetractHeight",
                            ParamOrder = 1,
                            ParamViewGroupId = "RetractPosition",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("79650d85-cc84-4181-9943-71c819290cf4"),
                            ClientId = "default",
                            ParamId = "RetractPosAtProcessEnd",
                            ParamOrder = 2,
                            ParamViewGroupId = "RetractPosition",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("b810546d-abfb-4918-8872-40d4731aa3e1"),
                            ClientId = "default",
                            ParamId = "SlagSensitivity",
                            ParamOrder = 1,
                            ParamViewGroupId = "Slag",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("8200a742-41af-4711-9129-b338f639a8ac"),
                            ClientId = "default",
                            ParamId = "SlagPostTime",
                            ParamOrder = 2,
                            ParamViewGroupId = "Slag",
                            PasswordLevel = 1
                        },
                        new
                        {
                            Id = new Guid("e1209413-22d3-4c22-bd26-990d8e188a12"),
                            ClientId = "default",
                            ParamId = "SlagCuttingSpeedReduction",
                            ParamOrder = 3,
                            ParamViewGroupId = "Slag",
                            PasswordLevel = 2
                        },
                        new
                        {
                            Id = new Guid("9080daa6-5857-4a73-a72e-ae669ff65751"),
                            ClientId = "default",
                            ParamId = "CutO2Blowout",
                            ParamOrder = 1,
                            ParamViewGroupId = "PreFlow",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("3f1a09a1-dda3-4f38-8e23-6cf34464c7ad"),
                            ClientId = "default",
                            ParamId = "CutO2BlowoutBreak",
                            ParamOrder = 2,
                            ParamViewGroupId = "PreFlow",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("6079dfcb-a9e1-4257-90ec-5e3aafc81b1c"),
                            ClientId = "default",
                            ParamId = "CutO2BlowoutActive",
                            ParamOrder = 3,
                            ParamViewGroupId = "PreFlow",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("c74494c0-2624-4d3a-92ab-48d47ed0db57"),
                            ClientId = "default",
                            ParamId = "CurrCutO2BlowoutTime",
                            ParamOrder = 4,
                            ParamViewGroupId = "PreFlow",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("dfe0aa68-e923-41ef-a0a4-0825dd120105"),
                            ClientId = "default",
                            ParamId = "CutO2BlowOutTime",
                            ParamOrder = 5,
                            ParamViewGroupId = "PreFlow",
                            PasswordLevel = 1
                        },
                        new
                        {
                            Id = new Guid("4518498a-39a3-4b60-8295-910e86811794"),
                            ClientId = "default",
                            ParamId = "CutO2BlowOutPressure",
                            ParamOrder = 6,
                            ParamViewGroupId = "PreFlow",
                            PasswordLevel = 1
                        },
                        new
                        {
                            Id = new Guid("f652db60-b994-4e76-b837-5fa965e35cf4"),
                            ClientId = "default",
                            ParamId = "CutO2BlowOutTimeOut",
                            ParamOrder = 7,
                            ParamViewGroupId = "PreFlow",
                            PasswordLevel = 1
                        },
                        new
                        {
                            Id = new Guid("6bfb70f3-9a15-4a12-8842-786322949fd1"),
                            ClientId = "default",
                            ParamId = "PiercingSensorMode",
                            ParamOrder = 1,
                            ParamViewGroupId = "Piercing",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("e940891a-da1c-4c0a-939e-0f8ec9934c1b"),
                            ClientId = "default",
                            ParamId = "Dynamic",
                            ParamOrder = 1,
                            ParamViewGroupId = "HeightControl",
                            PasswordLevel = 1
                        },
                        new
                        {
                            Id = new Guid("4d845ea8-f35e-4a34-ac9a-fde03dbde40a"),
                            ClientId = "default",
                            ParamId = "HeightControlActive",
                            ParamOrder = 2,
                            ParamViewGroupId = "HeightControl",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("71537cd2-fdd9-464e-83cd-bcdf55366c48"),
                            ClientId = "default",
                            ParamId = "LinearDrivePosition",
                            ParamOrder = 3,
                            ParamViewGroupId = "HeightControl",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("fc0ac9a0-58d6-43e0-91e4-982b430b67e8"),
                            ClientId = "default",
                            ParamId = "StatusHeightControl",
                            ParamOrder = 4,
                            ParamViewGroupId = "HeightControl",
                            PasswordLevel = 0
                        });
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ParamViewGroup", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GroupOrder")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ParamViewGroups");

                    b.HasData(
                        new
                        {
                            Id = "HeightCalibration",
                            GroupName = "Height Calibration",
                            GroupOrder = 1
                        },
                        new
                        {
                            Id = "RetractPosition",
                            GroupName = "Retract Position",
                            GroupOrder = 2
                        },
                        new
                        {
                            Id = "Slag",
                            GroupName = "Slag",
                            GroupOrder = 3
                        },
                        new
                        {
                            Id = "PreFlow",
                            GroupName = "Pre Flow",
                            GroupOrder = 4
                        },
                        new
                        {
                            Id = "Piercing",
                            GroupName = "Piercing",
                            GroupOrder = 5
                        },
                        new
                        {
                            Id = "HeightControl",
                            GroupName = "Height Control",
                            GroupOrder = 6
                        },
                        new
                        {
                            Id = "HeightCalibration_client1",
                            GroupName = "Height Calibration",
                            GroupOrder = 1
                        },
                        new
                        {
                            Id = "RetractPosition_client1",
                            GroupName = "Retract Position",
                            GroupOrder = 3
                        },
                        new
                        {
                            Id = "Slag_client1",
                            GroupName = "Slag",
                            GroupOrder = 2
                        },
                        new
                        {
                            Id = "PreFlow_client1",
                            GroupName = "Pre Flow",
                            GroupOrder = 4
                        },
                        new
                        {
                            Id = "Piercing_client1",
                            GroupName = "Piercing",
                            GroupOrder = 5
                        },
                        new
                        {
                            Id = "HeightControl_client1",
                            GroupName = "Height Control",
                            GroupOrder = 6
                        });
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.DynParams", b =>
                {
                    b.HasOne("IhtApcWebServer.Data.Models.APCHardware.ConstParams", "ConstParams")
                        .WithMany("DynParams")
                        .HasForeignKey("ConstParamsId");

                    b.HasOne("IhtApcWebServer.Data.Models.APCHardware.ParameterDataInfo", "ParameterDataInfo")
                        .WithMany("DynParams")
                        .HasForeignKey("ParameterDataInfoId");

                    b.Navigation("ConstParams");

                    b.Navigation("ParameterDataInfo");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.LiveParams", b =>
                {
                    b.HasOne("IhtApcWebServer.Data.Models.APCHardware.ParameterDataInfo", "ParameterDataInfo")
                        .WithMany()
                        .HasForeignKey("ParameterDataInfoId");

                    b.Navigation("ParameterDataInfo");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ParameterData", b =>
                {
                    b.HasOne("IhtApcWebServer.Data.Models.APCHardware.APCDevice", "APCDevice")
                        .WithMany("ParameterDatas")
                        .HasForeignKey("APCDeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IhtApcWebServer.Data.Models.APCHardware.DynParams", "DynParams")
                        .WithMany("ParameterDatas")
                        .HasForeignKey("DynParamsId");

                    b.Navigation("APCDevice");

                    b.Navigation("DynParams");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ParamSettings", b =>
                {
                    b.HasOne("IhtApcWebServer.Data.Models.APCHardware.ParamViewGroup", "ParamViewGroup")
                        .WithMany()
                        .HasForeignKey("ParamViewGroupId");

                    b.Navigation("ParamViewGroup");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.APCDevice", b =>
                {
                    b.Navigation("ParameterDatas");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ConstParams", b =>
                {
                    b.Navigation("DynParams");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.DynParams", b =>
                {
                    b.Navigation("ParameterDatas");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ParameterDataInfo", b =>
                {
                    b.Navigation("DynParams");
                });
#pragma warning restore 612, 618
        }
    }
}
