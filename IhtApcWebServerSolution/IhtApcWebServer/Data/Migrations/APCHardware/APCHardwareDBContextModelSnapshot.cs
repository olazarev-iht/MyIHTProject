// <auto-generated />
using System;
using IhtApcWebServer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IhtApcWebServer.Data.Migrations.APCHardware
{
    [DbContext(typeof(APCHardwareDBContext))]
    partial class APCHardwareDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.APCDevice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Num")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("APCDevices");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6f1181a0-e64e-49d1-9ed6-71f7e7b5c002"),
                            Name = "APCDevice_1",
                            Num = 1
                        },
                        new
                        {
                            Id = new Guid("113c6f68-5ad9-4463-8371-49575265de5b"),
                            Name = "APCDevice_2",
                            Num = 2
                        },
                        new
                        {
                            Id = new Guid("6e47ecb3-17ba-4bb3-b74d-ed81d87d76e2"),
                            Name = "APCDevice_3",
                            Num = 3
                        },
                        new
                        {
                            Id = new Guid("ebfb9818-e2ce-4e64-8d51-9d4a898e18c1"),
                            Name = "APCDevice_4",
                            Num = 4
                        },
                        new
                        {
                            Id = new Guid("404bd864-ca6b-42cd-aee2-76987fd5c607"),
                            Name = "APCDevice_5",
                            Num = 5
                        },
                        new
                        {
                            Id = new Guid("4396b84b-6e69-4739-8a70-ff42cdd70f63"),
                            Name = "APCDevice_6",
                            Num = 6
                        },
                        new
                        {
                            Id = new Guid("23ff68f3-9a09-4dd0-b776-9ce0ef87fd8f"),
                            Name = "APCDevice_7",
                            Num = 7
                        },
                        new
                        {
                            Id = new Guid("fea9cdad-0306-4e56-b5e7-cc5665d976af"),
                            Name = "APCDevice_8",
                            Num = 8
                        },
                        new
                        {
                            Id = new Guid("d3b9a825-1215-4bad-abd3-4c7cf6c26352"),
                            Name = "APCDevice_9",
                            Num = 9
                        },
                        new
                        {
                            Id = new Guid("0a0f7cbf-f83e-4a83-99d8-b415651227e2"),
                            Name = "APCDevice_10",
                            Num = 10
                        });
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ConstParams", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Max")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Min")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Step")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ConstParams");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.DynParams", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Address")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ConstParamsId")
                        .HasColumnType("TEXT");

                    b.Property<int>("ParamId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ParameterDataInfoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ConstParamsId");

                    b.HasIndex("ParameterDataInfoId");

                    b.ToTable("DynParams");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.LiveParams", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("ParamId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ParameterDataInfoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParameterDataInfoId");

                    b.ToTable("LiveParams");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ParameterData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("APCDeviceId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DynParamsId")
                        .HasColumnType("TEXT");

                    b.Property<int>("ParamGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ParamName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("APCDeviceId");

                    b.HasIndex("DynParamsId");

                    b.ToTable("ParameterDatas");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ParameterDataInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Format")
                        .HasColumnType("TEXT");

                    b.Property<string>("MaxDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("MinDescription")
                        .HasColumnType("TEXT");

                    b.Property<double>("Multiplier")
                        .HasColumnType("REAL");

                    b.Property<string>("StepDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("Unit")
                        .HasColumnType("TEXT");

                    b.Property<string>("ValueDescription")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ParameterDataInfos");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ParamSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ParamId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParamOrder")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ParamViewGroupId")
                        .HasColumnType("TEXT");

                    b.Property<int>("PasswordLevel")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParamViewGroupId");

                    b.ToTable("ParamSettings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1029f38f-7771-494b-8465-63d3e68de0d9"),
                            ClientId = "default",
                            ParamId = "TactileInitialPosFinding",
                            ParamOrder = 1,
                            ParamViewGroupId = "HeightCalibration",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("c9ef7363-cb2f-4a54-a693-5ee95fa0013b"),
                            ClientId = "default",
                            ParamId = "DistanceCalibration",
                            ParamOrder = 2,
                            ParamViewGroupId = "HeightCalibration",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("83dab855-7209-49ca-b558-bb25cf052d43"),
                            ClientId = "default",
                            ParamId = "LinearDrivePosition",
                            ParamOrder = 3,
                            ParamViewGroupId = "HeightCalibration",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("626df2a4-619d-4b49-9ba7-8d55c3eb4d13"),
                            ClientId = "default",
                            ParamId = "CalibrationValid",
                            ParamOrder = 4,
                            ParamViewGroupId = "HeightCalibration",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("836072cb-40d6-4595-b255-412638e4e3bf"),
                            ClientId = "default",
                            ParamId = "CalibrationActive",
                            ParamOrder = 5,
                            ParamViewGroupId = "HeightCalibration",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("956fc22b-72bd-46ab-8ecd-2e3a8c194c64"),
                            ClientId = "default",
                            ParamId = "RetractHeight",
                            ParamOrder = 1,
                            ParamViewGroupId = "RetractPosition",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("a6ab13b3-ffc6-41a9-a0a6-e98e8beb8022"),
                            ClientId = "default",
                            ParamId = "RetractPosAtProcessEnd",
                            ParamOrder = 2,
                            ParamViewGroupId = "RetractPosition",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("b225b1df-3551-450a-a72d-bd1db94d40b4"),
                            ClientId = "default",
                            ParamId = "SlagSensitivity",
                            ParamOrder = 1,
                            ParamViewGroupId = "Slag",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("941a33d5-0b27-480f-8a03-59a9553a720b"),
                            ClientId = "default",
                            ParamId = "SlagPostTime",
                            ParamOrder = 2,
                            ParamViewGroupId = "Slag",
                            PasswordLevel = 1
                        },
                        new
                        {
                            Id = new Guid("ba3bf117-f0ec-4c7e-bfb3-1701c41c138d"),
                            ClientId = "default",
                            ParamId = "SlagCuttingSpeedReduction",
                            ParamOrder = 3,
                            ParamViewGroupId = "Slag",
                            PasswordLevel = 2
                        },
                        new
                        {
                            Id = new Guid("97419eb4-f29f-4dc2-8cea-755555119ca3"),
                            ClientId = "default",
                            ParamId = "CutO2Blowout",
                            ParamOrder = 1,
                            ParamViewGroupId = "PreFlow",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("72faa3f7-1221-47c5-8ebf-46632df30f8a"),
                            ClientId = "default",
                            ParamId = "CutO2BlowoutBreak",
                            ParamOrder = 2,
                            ParamViewGroupId = "PreFlow",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("21436e4d-cc66-4e58-9642-157f7d9cf86d"),
                            ClientId = "default",
                            ParamId = "CutO2BlowoutActive",
                            ParamOrder = 3,
                            ParamViewGroupId = "PreFlow",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("bbfb8aad-c5aa-4c63-accf-6208e00be020"),
                            ClientId = "default",
                            ParamId = "CurrCutO2BlowoutTime",
                            ParamOrder = 4,
                            ParamViewGroupId = "PreFlow",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("aabb3ff8-dfd9-40c4-9fbc-9badcbad66a0"),
                            ClientId = "default",
                            ParamId = "CutO2BlowOutTime",
                            ParamOrder = 5,
                            ParamViewGroupId = "PreFlow",
                            PasswordLevel = 1
                        },
                        new
                        {
                            Id = new Guid("d0ea1d7c-97b5-4788-9dc7-7bbd62b48cb9"),
                            ClientId = "default",
                            ParamId = "CutO2BlowOutPressure",
                            ParamOrder = 6,
                            ParamViewGroupId = "PreFlow",
                            PasswordLevel = 1
                        },
                        new
                        {
                            Id = new Guid("ccc4ca13-8bf3-4770-bde5-cf350daf7322"),
                            ClientId = "default",
                            ParamId = "CutO2BlowOutTimeOut",
                            ParamOrder = 7,
                            ParamViewGroupId = "PreFlow",
                            PasswordLevel = 1
                        },
                        new
                        {
                            Id = new Guid("a604cdd7-d0b2-488c-8215-2ee41789af6f"),
                            ClientId = "default",
                            ParamId = "PiercingSensorMode",
                            ParamOrder = 1,
                            ParamViewGroupId = "Piercing",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("e2bb5b3e-a007-42ea-8ae9-7bc1f46f955f"),
                            ClientId = "default",
                            ParamId = "Dynamic",
                            ParamOrder = 1,
                            ParamViewGroupId = "HeightControl",
                            PasswordLevel = 1
                        },
                        new
                        {
                            Id = new Guid("8151f9ff-693a-4453-86b0-6f6a92d8571f"),
                            ClientId = "default",
                            ParamId = "HeightControlActive",
                            ParamOrder = 2,
                            ParamViewGroupId = "HeightControl",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("b2810981-dc37-4b91-aacc-68e504362417"),
                            ClientId = "default",
                            ParamId = "LinearDrivePosition",
                            ParamOrder = 3,
                            ParamViewGroupId = "HeightControl",
                            PasswordLevel = 0
                        },
                        new
                        {
                            Id = new Guid("1a1ed0fe-229e-4c2f-9402-d61773464633"),
                            ClientId = "default",
                            ParamId = "StatusHeightControl",
                            ParamOrder = 4,
                            ParamViewGroupId = "HeightControl",
                            PasswordLevel = 0
                        });
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ParamViewGroup", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GroupOrder")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ParamViewGroups");

                    b.HasData(
                        new
                        {
                            Id = "HeightCalibration",
                            GroupName = "Height Calibration",
                            GroupOrder = 1
                        },
                        new
                        {
                            Id = "RetractPosition",
                            GroupName = "Retract Position",
                            GroupOrder = 2
                        },
                        new
                        {
                            Id = "Slag",
                            GroupName = "Slag",
                            GroupOrder = 3
                        },
                        new
                        {
                            Id = "PreFlow",
                            GroupName = "Pre Flow",
                            GroupOrder = 4
                        },
                        new
                        {
                            Id = "Piercing",
                            GroupName = "Piercing",
                            GroupOrder = 5
                        },
                        new
                        {
                            Id = "HeightControl",
                            GroupName = "Height Control",
                            GroupOrder = 6
                        },
                        new
                        {
                            Id = "HeightCalibration_client1",
                            GroupName = "Height Calibration",
                            GroupOrder = 1
                        },
                        new
                        {
                            Id = "RetractPosition_client1",
                            GroupName = "Retract Position",
                            GroupOrder = 3
                        },
                        new
                        {
                            Id = "Slag_client1",
                            GroupName = "Slag",
                            GroupOrder = 2
                        },
                        new
                        {
                            Id = "PreFlow_client1",
                            GroupName = "Pre Flow",
                            GroupOrder = 4
                        },
                        new
                        {
                            Id = "Piercing_client1",
                            GroupName = "Piercing",
                            GroupOrder = 5
                        },
                        new
                        {
                            Id = "HeightControl_client1",
                            GroupName = "Height Control",
                            GroupOrder = 6
                        });
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.DynParams", b =>
                {
                    b.HasOne("IhtApcWebServer.Data.Models.APCHardware.ConstParams", "ConstParams")
                        .WithMany("DynParams")
                        .HasForeignKey("ConstParamsId");

                    b.HasOne("IhtApcWebServer.Data.Models.APCHardware.ParameterDataInfo", "ParameterDataInfo")
                        .WithMany("DynParams")
                        .HasForeignKey("ParameterDataInfoId");

                    b.Navigation("ConstParams");

                    b.Navigation("ParameterDataInfo");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.LiveParams", b =>
                {
                    b.HasOne("IhtApcWebServer.Data.Models.APCHardware.ParameterDataInfo", "ParameterDataInfo")
                        .WithMany()
                        .HasForeignKey("ParameterDataInfoId");

                    b.Navigation("ParameterDataInfo");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ParameterData", b =>
                {
                    b.HasOne("IhtApcWebServer.Data.Models.APCHardware.APCDevice", "APCDevice")
                        .WithMany("ParameterDatas")
                        .HasForeignKey("APCDeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IhtApcWebServer.Data.Models.APCHardware.DynParams", "DynParams")
                        .WithMany("ParameterDatas")
                        .HasForeignKey("DynParamsId");

                    b.Navigation("APCDevice");

                    b.Navigation("DynParams");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ParamSettings", b =>
                {
                    b.HasOne("IhtApcWebServer.Data.Models.APCHardware.ParamViewGroup", "ParamViewGroup")
                        .WithMany()
                        .HasForeignKey("ParamViewGroupId");

                    b.Navigation("ParamViewGroup");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.APCDevice", b =>
                {
                    b.Navigation("ParameterDatas");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ConstParams", b =>
                {
                    b.Navigation("DynParams");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.DynParams", b =>
                {
                    b.Navigation("ParameterDatas");
                });

            modelBuilder.Entity("IhtApcWebServer.Data.Models.APCHardware.ParameterDataInfo", b =>
                {
                    b.Navigation("DynParams");
                });
#pragma warning restore 612, 618
        }
    }
}
