@using  System.Globalization
@using SharedComponents.Helpers

@inject NavigationManager Nav

@inherits IhtComponentBase

<style>
.my-install-toarch .mud-input > input.mud-input-root, div.mud-input-slot.mud-input-root {
    padding: 12px 10px !important;
    font-size: 18px
}
</style>

<MudSelect Class="ma-1 pa-1" @bind-Value="@CurrUICulture" Label=@LocalStrByKey("_CultureLanguage") Variant="Variant.Outlined">
    @foreach (var culture in supportedCultures)
    {
        var languageName = LocalizationHelper.GetLanguageEnglishName(culture);

        var regionName = LocalizationHelper.GetRegionNameFromCulture(culture);

        var languageExt = languageName.ToLower() == "english" ? $"({regionName})" : "";

        if (string.IsNullOrEmpty(regionName))
        {
            continue;
        }

        var flagName = LocalizationHelper.GetFlagNameFromRegionName(regionName);

        <MudSelectItem Value="@culture">
            <img draggable="false" src="@LocalizationHelper.GetFlagNamePath(flagName ?? string.Empty)"
                 style="mix-blend-mode: normal; width: 35px; height: 20px; vertical-align: middle;" />
            &nbsp;&nbsp;@languageName @languageExt
        </MudSelectItem>
    }
</MudSelect>


@code
{
    private CultureInfo[] supportedCultures = new[]
    {
        new CultureInfo("de-DE"),
        new CultureInfo("en-US"),      
        new CultureInfo("fr-FR"),
        new CultureInfo("hu-HU"),
        new CultureInfo("it-IT"),      
        new CultureInfo("nl-NL"),
        new CultureInfo("sl-SI"),
        new CultureInfo("zH-Hans"),
        new CultureInfo("en-GB"),
    };

    protected override void OnInitialized()
    {
        CurrUICulture = CultureInfo.CurrentUICulture;
    }

    private CultureInfo CurrUICulture
    {
        get => CultureInfo.CurrentUICulture;
        set
        {
            if (CultureInfo.CurrentUICulture != value)
            {
                var uri = new Uri(Nav.Uri)
                    .GetComponents(UriComponents.PathAndQuery, UriFormat.Unescaped);
                var cultureEscaped = Uri.EscapeDataString(value.Name);
                var uriEscaped = Uri.EscapeDataString(uri);

                Nav.NavigateTo(
                    $"Culture/Set?newCulture={cultureEscaped}&redirectUri={uriEscaped}",
                    forceLoad: true);
            }
        }
    }
}