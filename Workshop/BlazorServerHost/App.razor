@using System.Reflection
@using BlazorServerHost.Services
@* using SharedComponents.Pages *@

@inherits IhtComponentBase

@inject ISnackbar Snackbar;
@inject AuthenticationStateProvider AuthState;
@inject CommunicationsService Comms;

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly" AdditionalAssemblies="@assemblies">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    <MudAlert Severity="Severity.Warning">
                        @T["NotAuthorized"]
                    </MudAlert>
                </NotAuthorized>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <MudAlert Severity="Severity.Warning">404: Nothing found at this route.</MudAlert>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    
    private IEnumerable<Assembly> assemblies = new Assembly[]
    {
        // typeof(CuttingParameters).Assembly,
    };

    protected override void OnInitialized()
    {
        Comms.OnButtonPressed += CommsOnOnButtonPressed;
        base.OnInitialized();
    }

    private async void CommsOnOnButtonPressed(object? sender, EventArgs e)
    {
        var authState = await AuthState.GetAuthenticationStateAsync();
        if (authState.User.IsInRole("User"))
        {
            Snackbar.Add("Some user pressed a button", Severity.Info);
        }
    }

    public override void Dispose()
    {
        Comms.OnButtonPressed -= CommsOnOnButtonPressed;
        base.Dispose();
    }

}
