// <auto-generated />
using System;
using BlazorServerHost.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorServerHost.Data.Migrations.APCHardware
{
    [DbContext(typeof(APCHardwareDBContext))]
    [Migration("20220801100651_Create_Schema_AndSeed")]
    partial class Create_Schema_AndSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("BlazorServerHost.Data.Models.APCHardware.APCDevice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Num")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("APCDevices");
                });

            modelBuilder.Entity("BlazorServerHost.Data.Models.APCHardware.ConstParams", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Max")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Min")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Step")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ConstParams");
                });

            modelBuilder.Entity("BlazorServerHost.Data.Models.APCHardware.DynParams", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ConstParamsId")
                        .HasColumnType("TEXT");

                    b.Property<int>("ParamId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ParameterDataInfoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ConstParamsId");

                    b.HasIndex("ParameterDataInfoId");

                    b.ToTable("DynParams");
                });

            modelBuilder.Entity("BlazorServerHost.Data.Models.APCHardware.LiveParams", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("ParamId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ParameterDataInfoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParameterDataInfoId");

                    b.ToTable("LiveParams");
                });

            modelBuilder.Entity("BlazorServerHost.Data.Models.APCHardware.ParameterData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("APCDeviceId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DynParamsId")
                        .HasColumnType("TEXT");

                    b.Property<int>("ParamGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ParamName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ViewItemOrder")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ViewParamGroupId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("APCDeviceId");

                    b.HasIndex("DynParamsId");

                    b.HasIndex("ViewParamGroupId");

                    b.ToTable("ParameterDatas");
                });

            modelBuilder.Entity("BlazorServerHost.Data.Models.APCHardware.ParameterDataInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Format")
                        .HasColumnType("TEXT");

                    b.Property<string>("MaxDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("MinDescription")
                        .HasColumnType("TEXT");

                    b.Property<double>("Multiplier")
                        .HasColumnType("REAL");

                    b.Property<string>("StepDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("Unit")
                        .HasColumnType("TEXT");

                    b.Property<string>("ValueDescription")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ParameterDataInfos");
                });

            modelBuilder.Entity("BlazorServerHost.Data.Models.APCHardware.ViewParamGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ViewOrder")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ViewGroups");

                    b.HasData(
                        new
                        {
                            Id = new Guid("25e18de0-70dc-4f99-aa5a-3740e7b93518"),
                            Name = "Height Calibration",
                            ViewOrder = 1
                        },
                        new
                        {
                            Id = new Guid("873a1786-4393-4d2f-ab1f-d842ed92e03a"),
                            Name = "Retract Position",
                            ViewOrder = 2
                        },
                        new
                        {
                            Id = new Guid("bde14a4a-32e0-4c3b-8c09-f2ec6cee3385"),
                            Name = "Slag",
                            ViewOrder = 3
                        },
                        new
                        {
                            Id = new Guid("99c27f84-e212-494e-8b57-ceeddff712d8"),
                            Name = "Pre Flow",
                            ViewOrder = 4
                        },
                        new
                        {
                            Id = new Guid("bf5ac7d9-a663-4c5e-9b28-9a422464fa28"),
                            Name = "Piercing",
                            ViewOrder = 5
                        },
                        new
                        {
                            Id = new Guid("f58caf59-f142-4cb5-84d5-2f70bf618742"),
                            Name = "Height Control",
                            ViewOrder = 6
                        });
                });

            modelBuilder.Entity("BlazorServerHost.Data.Models.APCHardware.ViewParamOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ParamName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ViewItemOrder")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ViewParamGroupId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ViewParamGroupId");

                    b.ToTable("ViewParamOrders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d8a4c8fd-2868-4e4f-9f1b-d62207870d31"),
                            ParamName = "TactileInitialPosFinding",
                            ViewItemOrder = 1,
                            ViewParamGroupId = new Guid("25e18de0-70dc-4f99-aa5a-3740e7b93518")
                        },
                        new
                        {
                            Id = new Guid("2d78eef9-c5f0-45ac-9440-4b431f824f25"),
                            ParamName = "DistanceCalibration",
                            ViewItemOrder = 2,
                            ViewParamGroupId = new Guid("25e18de0-70dc-4f99-aa5a-3740e7b93518")
                        },
                        new
                        {
                            Id = new Guid("8141a08b-be92-416f-a582-ff8ba631b664"),
                            ParamName = "RetractHeight",
                            ViewItemOrder = 1,
                            ViewParamGroupId = new Guid("873a1786-4393-4d2f-ab1f-d842ed92e03a")
                        },
                        new
                        {
                            Id = new Guid("062ec58b-e366-4f35-8160-cf83fde54efc"),
                            ParamName = "RetractPosition",
                            ViewItemOrder = 2,
                            ViewParamGroupId = new Guid("873a1786-4393-4d2f-ab1f-d842ed92e03a")
                        },
                        new
                        {
                            Id = new Guid("0858ee1e-bac5-45b0-abec-88466e47f9af"),
                            ParamName = "SlagSensitivity",
                            ViewItemOrder = 1,
                            ViewParamGroupId = new Guid("bde14a4a-32e0-4c3b-8c09-f2ec6cee3385")
                        },
                        new
                        {
                            Id = new Guid("c0b7defd-70a1-49c3-85fc-7fe5e940923a"),
                            ParamName = "SlagPostTime",
                            ViewItemOrder = 2,
                            ViewParamGroupId = new Guid("bde14a4a-32e0-4c3b-8c09-f2ec6cee3385")
                        },
                        new
                        {
                            Id = new Guid("be11e649-9dd6-4b7c-b22f-9b724562a5bf"),
                            ParamName = "SlagCuttingSpeedReduction",
                            ViewItemOrder = 3,
                            ViewParamGroupId = new Guid("bde14a4a-32e0-4c3b-8c09-f2ec6cee3385")
                        },
                        new
                        {
                            Id = new Guid("1d185725-e330-4acd-ba13-1b41866e0fb5"),
                            ParamName = "StartPreflow",
                            ViewItemOrder = 1,
                            ViewParamGroupId = new Guid("99c27f84-e212-494e-8b57-ceeddff712d8")
                        },
                        new
                        {
                            Id = new Guid("76be0d1a-ba3f-4a39-a802-d98ec1d999d2"),
                            ParamName = "PreflowActive",
                            ViewItemOrder = 2,
                            ViewParamGroupId = new Guid("99c27f84-e212-494e-8b57-ceeddff712d8")
                        },
                        new
                        {
                            Id = new Guid("2b61d633-0a94-434c-b879-f272c55aca1a"),
                            ParamName = "CutO2BlowOutTime",
                            ViewItemOrder = 3,
                            ViewParamGroupId = new Guid("99c27f84-e212-494e-8b57-ceeddff712d8")
                        },
                        new
                        {
                            Id = new Guid("902327fb-4173-4084-9ede-bdec8de982db"),
                            ParamName = "CutO2BlowOutPressure",
                            ViewItemOrder = 4,
                            ViewParamGroupId = new Guid("99c27f84-e212-494e-8b57-ceeddff712d8")
                        },
                        new
                        {
                            Id = new Guid("b5e9c99a-4bd2-4f52-b05c-65fd33f39b0f"),
                            ParamName = "CutO2BlowOutTimeOut",
                            ViewItemOrder = 5,
                            ViewParamGroupId = new Guid("99c27f84-e212-494e-8b57-ceeddff712d8")
                        },
                        new
                        {
                            Id = new Guid("3980d18f-4700-4061-aec4-492b6de7b66d"),
                            ParamName = "PiercingHeightControl",
                            ViewItemOrder = 1,
                            ViewParamGroupId = new Guid("bf5ac7d9-a663-4c5e-9b28-9a422464fa28")
                        },
                        new
                        {
                            Id = new Guid("da9a7d1c-75e3-4531-9a9b-a7f96c61e31f"),
                            ParamName = "PiercingDetection",
                            ViewItemOrder = 2,
                            ViewParamGroupId = new Guid("bf5ac7d9-a663-4c5e-9b28-9a422464fa28")
                        },
                        new
                        {
                            Id = new Guid("8db61eed-1906-4bdd-9731-d5900028e005"),
                            ParamName = "Dynamic",
                            ViewItemOrder = 1,
                            ViewParamGroupId = new Guid("f58caf59-f142-4cb5-84d5-2f70bf618742")
                        },
                        new
                        {
                            Id = new Guid("aa87f8ef-48b7-4354-91eb-b184da45239b"),
                            ParamName = "HeightControlActive",
                            ViewItemOrder = 2,
                            ViewParamGroupId = new Guid("f58caf59-f142-4cb5-84d5-2f70bf618742")
                        },
                        new
                        {
                            Id = new Guid("0daed1f1-53e6-4c47-a180-47b0cecb0a3f"),
                            ParamName = "Off",
                            ViewItemOrder = 3,
                            ViewParamGroupId = new Guid("f58caf59-f142-4cb5-84d5-2f70bf618742")
                        },
                        new
                        {
                            Id = new Guid("d0eaae8a-22e8-4b0b-b628-84eb14ca50a4"),
                            ParamName = "HeightPreHeat",
                            ViewItemOrder = 4,
                            ViewParamGroupId = new Guid("f58caf59-f142-4cb5-84d5-2f70bf618742")
                        },
                        new
                        {
                            Id = new Guid("92d93678-5baf-4f34-b1bb-665765a1346e"),
                            ParamName = "HeightPierce",
                            ViewItemOrder = 5,
                            ViewParamGroupId = new Guid("f58caf59-f142-4cb5-84d5-2f70bf618742")
                        },
                        new
                        {
                            Id = new Guid("8e25b7a7-61c3-4fa6-825c-f4a6b7362a8d"),
                            ParamName = "HeightCut",
                            ViewItemOrder = 6,
                            ViewParamGroupId = new Guid("f58caf59-f142-4cb5-84d5-2f70bf618742")
                        });
                });

            modelBuilder.Entity("BlazorServerHost.Data.Models.APCHardware.DynParams", b =>
                {
                    b.HasOne("BlazorServerHost.Data.Models.APCHardware.ConstParams", "ConstParams")
                        .WithMany()
                        .HasForeignKey("ConstParamsId");

                    b.HasOne("BlazorServerHost.Data.Models.APCHardware.ParameterDataInfo", "ParameterDataInfo")
                        .WithMany()
                        .HasForeignKey("ParameterDataInfoId");

                    b.Navigation("ConstParams");

                    b.Navigation("ParameterDataInfo");
                });

            modelBuilder.Entity("BlazorServerHost.Data.Models.APCHardware.LiveParams", b =>
                {
                    b.HasOne("BlazorServerHost.Data.Models.APCHardware.ParameterDataInfo", "ParameterDataInfo")
                        .WithMany()
                        .HasForeignKey("ParameterDataInfoId");

                    b.Navigation("ParameterDataInfo");
                });

            modelBuilder.Entity("BlazorServerHost.Data.Models.APCHardware.ParameterData", b =>
                {
                    b.HasOne("BlazorServerHost.Data.Models.APCHardware.APCDevice", "APCDevice")
                        .WithMany("parameterDatas")
                        .HasForeignKey("APCDeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorServerHost.Data.Models.APCHardware.DynParams", "DynParams")
                        .WithMany()
                        .HasForeignKey("DynParamsId");

                    b.HasOne("BlazorServerHost.Data.Models.APCHardware.ViewParamGroup", "ViewParamGroup")
                        .WithMany()
                        .HasForeignKey("ViewParamGroupId");

                    b.Navigation("APCDevice");

                    b.Navigation("DynParams");

                    b.Navigation("ViewParamGroup");
                });

            modelBuilder.Entity("BlazorServerHost.Data.Models.APCHardware.ViewParamOrder", b =>
                {
                    b.HasOne("BlazorServerHost.Data.Models.APCHardware.ViewParamGroup", "ViewParamGroup")
                        .WithMany()
                        .HasForeignKey("ViewParamGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ViewParamGroup");
                });

            modelBuilder.Entity("BlazorServerHost.Data.Models.APCHardware.APCDevice", b =>
                {
                    b.Navigation("parameterDatas");
                });
#pragma warning restore 612, 618
        }
    }
}
