// <auto-generated />
using System;
using BlazorServerHost.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorServerHost.Data.Migrations.CuttingData
{
    [DbContext(typeof(CuttingDataDbContext))]
    partial class CuttingDataDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("BlazorServerHost.Data.Models.CuttingData.APCCuttingParametersIHT", b =>
                {
                    b.Property<int>("ControlBits")
                        .HasColumnType("INTEGER");

                    b.Property<float>("CutCuttingOxygenPressure")
                        .HasColumnType("REAL");

                    b.Property<float>("CutFuelGasPressure")
                        .HasColumnType("REAL");

                    b.Property<float>("CutHeatingOxygenPressure")
                        .HasColumnType("REAL");

                    b.Property<int>("CutHeight")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CuttingSpeed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExtKey")
                        .HasColumnType("TEXT");

                    b.Property<int>("IgnitionFlameAdjustment")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Kerf")
                        .HasColumnType("REAL");

                    b.Property<int>("LeadInLength")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Material")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nozzle")
                        .HasColumnType("TEXT");

                    b.Property<float>("PI0")
                        .HasColumnType("REAL");

                    b.Property<float>("PI1")
                        .HasColumnType("REAL");

                    b.Property<int>("PP0")
                        .HasColumnType("INTEGER");

                    b.Property<float>("PP1")
                        .HasColumnType("REAL");

                    b.Property<float>("PP2")
                        .HasColumnType("REAL");

                    b.Property<float>("PP3")
                        .HasColumnType("REAL");

                    b.Property<float>("PP4")
                        .HasColumnType("REAL");

                    b.Property<float>("PierceCuttingOxygenPressure")
                        .HasColumnType("REAL");

                    b.Property<int>("PierceCuttingSpeedChange")
                        .HasColumnType("INTEGER");

                    b.Property<float>("PierceFuelGasPressure")
                        .HasColumnType("REAL");

                    b.Property<float>("PierceHeatingOxygenPressure")
                        .HasColumnType("REAL");

                    b.Property<int>("PierceHeight")
                        .HasColumnType("INTEGER");

                    b.Property<float>("PierceTime")
                        .HasColumnType("REAL");

                    b.Property<float>("PreHeatFuelGasPressure")
                        .HasColumnType("REAL");

                    b.Property<float>("PreHeatHeatingOxygenPressure")
                        .HasColumnType("REAL");

                    b.Property<int>("PreHeatHeight")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PreHeatTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Remark")
                        .HasColumnType("TEXT");

                    b.Property<int>("Thickness")
                        .HasColumnType("INTEGER");

                    b.Property<int>("idGas")
                        .HasColumnType("INTEGER");

                    b.ToTable("APCCuttingParametersIHT");
                });

            modelBuilder.Entity("BlazorServerHost.Data.Models.CuttingData.CuttingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Controlbits")
                        .HasColumnType("INTEGER");

                    b.Property<float>("CutCuttingOxygenPressure")
                        .HasColumnType("REAL");

                    b.Property<float>("CutFuelGasPressure")
                        .HasColumnType("REAL");

                    b.Property<float>("CutHeatingOxygenPressure")
                        .HasColumnType("REAL");

                    b.Property<int>("CutHeight")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CuttingSpeed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExtKey")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("GasId")
                        .HasColumnType("TEXT");

                    b.Property<int>("IgnitionFlameAdjustment")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Kerf")
                        .HasColumnType("REAL");

                    b.Property<int>("LeadInLength")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("MaterialId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("NozzleId")
                        .HasColumnType("TEXT");

                    b.Property<float>("PI0")
                        .HasColumnType("REAL");

                    b.Property<float>("PI1")
                        .HasColumnType("REAL");

                    b.Property<float>("PP0")
                        .HasColumnType("REAL");

                    b.Property<float>("PP1")
                        .HasColumnType("REAL");

                    b.Property<float>("PP2")
                        .HasColumnType("REAL");

                    b.Property<float>("PP3")
                        .HasColumnType("REAL");

                    b.Property<float>("PP4")
                        .HasColumnType("REAL");

                    b.Property<float>("PierceCuttingOxygenPressure")
                        .HasColumnType("REAL");

                    b.Property<int>("PierceCuttingSpeedChange")
                        .HasColumnType("INTEGER");

                    b.Property<float>("PierceFuelGasPressure")
                        .HasColumnType("REAL");

                    b.Property<float>("PierceHeatingOxygenPressure")
                        .HasColumnType("REAL");

                    b.Property<int>("PierceHeight")
                        .HasColumnType("INTEGER");

                    b.Property<float>("PierceTime")
                        .HasColumnType("REAL");

                    b.Property<float>("PreHeatFuelGasPressure")
                        .HasColumnType("REAL");

                    b.Property<float>("PreHeatHeatingOxygenPressure")
                        .HasColumnType("REAL");

                    b.Property<int>("PreHeatHeight")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PreHeatTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Remark")
                        .HasColumnType("TEXT");

                    b.Property<float>("Thickness")
                        .HasColumnType("REAL");

                    b.Property<int?>("idCutDataParent")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GasId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("NozzleId");

                    b.ToTable("CuttingData");
                });

            modelBuilder.Entity("BlazorServerHost.Data.Models.CuttingData.Gas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("GasId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Gas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1cc5e035-f66d-4a20-b398-5f77314cb1a7"),
                            GasId = 0,
                            Name = "Propan"
                        },
                        new
                        {
                            Id = new Guid("78eb87d8-9348-4546-8888-0fa9b40758a2"),
                            GasId = 1,
                            Name = "Acetylene"
                        },
                        new
                        {
                            Id = new Guid("493a1c7f-a291-4d58-92aa-77174f83b676"),
                            GasId = 2,
                            Name = "NaturalGas"
                        });
                });

            modelBuilder.Entity("BlazorServerHost.Data.Models.CuttingData.Material", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Material");

                    b.HasData(
                        new
                        {
                            Id = new Guid("48572777-e81b-4b9f-ade7-a04a63838fbf"),
                            Name = "Mild Steel"
                        });
                });

            modelBuilder.Entity("BlazorServerHost.Data.Models.CuttingData.Nozzle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImgPathBegin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImgPathEnd")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Nozzle");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6b3e0e3a-5af8-46cb-8b53-d3320ea782d1"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ARC 3-40"
                        },
                        new
                        {
                            Id = new Guid("7eb6c257-8d0e-4fca-bfec-1761e3d296f9"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ARC 3-70"
                        },
                        new
                        {
                            Id = new Guid("130a9f6b-257f-43b2-9df7-aa1c40b85b8b"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PRC 5-40"
                        },
                        new
                        {
                            Id = new Guid("2efc5fec-2fb8-44e6-b3f2-2c7b77715d3a"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PRC 5-70"
                        },
                        new
                        {
                            Id = new Guid("57e041e1-25d2-4b75-8f73-917cb8c6959c"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ASF 3-5"
                        },
                        new
                        {
                            Id = new Guid("3fb1cda4-2472-4baa-95a8-5b43ced19a3f"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ASF 6-10"
                        },
                        new
                        {
                            Id = new Guid("2164ec4b-d449-4b39-8a78-1252daf125be"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ASF 10-25"
                        },
                        new
                        {
                            Id = new Guid("21772aa1-f93d-4059-bd77-07abc42a6d7d"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ASF 25-40"
                        },
                        new
                        {
                            Id = new Guid("ce2f8d33-087d-4b95-a3eb-e3a8b1cd3e3c"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ASF 40-60"
                        },
                        new
                        {
                            Id = new Guid("4870a16c-d70d-4a31-aee8-0747e2819be4"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ASF 60-100"
                        },
                        new
                        {
                            Id = new Guid("01f2562d-a871-4bc2-ae42-6850aad10dc4"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ASF 100-150"
                        },
                        new
                        {
                            Id = new Guid("7238f412-e053-472f-ae0f-5c46ffcd298f"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ASF 150-230"
                        },
                        new
                        {
                            Id = new Guid("a04b9d1a-e2cf-4b05-b967-f04e7cba2730"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ASF 230-300"
                        },
                        new
                        {
                            Id = new Guid("a1fa74c3-f8e1-4e78-989f-309e729b4b75"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 3-6"
                        },
                        new
                        {
                            Id = new Guid("6921c3c4-a74d-44c6-8d02-10533d97295c"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 7-15"
                        },
                        new
                        {
                            Id = new Guid("e2b88477-b228-4663-bcf3-8e595b19d715"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 15-25"
                        },
                        new
                        {
                            Id = new Guid("bb436ec3-8975-4919-8124-42bc5c50ba5e"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 25-40"
                        },
                        new
                        {
                            Id = new Guid("87c00c4d-eebf-46f8-abac-f34ea2fa902b"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 40-60"
                        },
                        new
                        {
                            Id = new Guid("50333815-3f76-4e3b-824f-cc8921048398"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 60-100"
                        },
                        new
                        {
                            Id = new Guid("e3f8079b-3ac2-4d85-b1f1-d92cbb8be7a1"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 100-150"
                        },
                        new
                        {
                            Id = new Guid("981144ca-e835-49f9-b3c4-fa566eb2c9af"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 100-200"
                        },
                        new
                        {
                            Id = new Guid("55d2d908-ef74-4640-a1c4-8d9761d01fe2"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 150-200"
                        },
                        new
                        {
                            Id = new Guid("d1ce5e52-780d-4add-bb63-018681932286"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 200-250"
                        },
                        new
                        {
                            Id = new Guid("a9e636fc-f227-4ba1-95fe-707298990163"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 250-300"
                        });
                });

            modelBuilder.Entity("BlazorServerHost.Data.Models.CuttingData.CuttingData", b =>
                {
                    b.HasOne("BlazorServerHost.Data.Models.CuttingData.Gas", "Gas")
                        .WithMany()
                        .HasForeignKey("GasId");

                    b.HasOne("BlazorServerHost.Data.Models.CuttingData.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId");

                    b.HasOne("BlazorServerHost.Data.Models.CuttingData.Nozzle", "Nozzle")
                        .WithMany()
                        .HasForeignKey("NozzleId");

                    b.Navigation("Gas");

                    b.Navigation("Material");

                    b.Navigation("Nozzle");
                });
#pragma warning restore 612, 618
        }
    }
}
