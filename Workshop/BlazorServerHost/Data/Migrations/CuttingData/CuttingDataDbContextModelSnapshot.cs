// <auto-generated />
using System;
using BlazorServerHost.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorServerHost.Data.Migrations.CuttingData
{
    [DbContext(typeof(CuttingDataDbContext))]
    partial class CuttingDataDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("BlazorServerHost.Data.Models.CuttingData.APCCuttingParametersIHT", b =>
                {
                    b.Property<int>("ControlBits")
                        .HasColumnType("INTEGER");

                    b.Property<float>("CutCuttingOxygenPressure")
                        .HasColumnType("REAL");

                    b.Property<float>("CutFuelGasPressure")
                        .HasColumnType("REAL");

                    b.Property<float>("CutHeatingOxygenPressure")
                        .HasColumnType("REAL");

                    b.Property<int>("CutHeight")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CuttingSpeed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExtKey")
                        .HasColumnType("TEXT");

                    b.Property<int>("IgnitionFlameAdjustment")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Kerf")
                        .HasColumnType("REAL");

                    b.Property<int>("LeadInLength")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Material")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nozzle")
                        .HasColumnType("TEXT");

                    b.Property<float>("PI0")
                        .HasColumnType("REAL");

                    b.Property<float>("PI1")
                        .HasColumnType("REAL");

                    b.Property<int>("PP0")
                        .HasColumnType("INTEGER");

                    b.Property<float>("PP1")
                        .HasColumnType("REAL");

                    b.Property<float>("PP2")
                        .HasColumnType("REAL");

                    b.Property<float>("PP3")
                        .HasColumnType("REAL");

                    b.Property<float>("PP4")
                        .HasColumnType("REAL");

                    b.Property<float>("PierceCuttingOxygenPressure")
                        .HasColumnType("REAL");

                    b.Property<int>("PierceCuttingSpeedChange")
                        .HasColumnType("INTEGER");

                    b.Property<float>("PierceFuelGasPressure")
                        .HasColumnType("REAL");

                    b.Property<float>("PierceHeatingOxygenPressure")
                        .HasColumnType("REAL");

                    b.Property<int>("PierceHeight")
                        .HasColumnType("INTEGER");

                    b.Property<float>("PierceTime")
                        .HasColumnType("REAL");

                    b.Property<float>("PreHeatFuelGasPressure")
                        .HasColumnType("REAL");

                    b.Property<float>("PreHeatHeatingOxygenPressure")
                        .HasColumnType("REAL");

                    b.Property<int>("PreHeatHeight")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PreHeatTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Remark")
                        .HasColumnType("TEXT");

                    b.Property<int>("Thickness")
                        .HasColumnType("INTEGER");

                    b.Property<int>("idGas")
                        .HasColumnType("INTEGER");

                    b.ToTable("APCCuttingParametersIHT");
                });

            modelBuilder.Entity("BlazorServerHost.Data.Models.CuttingData.CustomCounter", b =>
                {
                    b.Property<int>("Ids")
                        .HasColumnType("INTEGER");

                    b.ToTable("CustomCounter");
                });

            modelBuilder.Entity("BlazorServerHost.Data.Models.CuttingData.CuttingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Controlbits")
                        .HasColumnType("INTEGER");

                    b.Property<float>("CutCuttingOxygenPressure")
                        .HasColumnType("REAL");

                    b.Property<float>("CutFuelGasPressure")
                        .HasColumnType("REAL");

                    b.Property<float>("CutHeatingOxygenPressure")
                        .HasColumnType("REAL");

                    b.Property<int>("CutHeight")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CuttingSpeed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExtKey")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("GasId")
                        .HasColumnType("TEXT");

                    b.Property<int>("IgnitionFlameAdjustment")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Kerf")
                        .HasColumnType("REAL");

                    b.Property<int>("LeadInLength")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("MaterialId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("NozzleId")
                        .HasColumnType("TEXT");

                    b.Property<float>("PI0")
                        .HasColumnType("REAL");

                    b.Property<float>("PI1")
                        .HasColumnType("REAL");

                    b.Property<float>("PP0")
                        .HasColumnType("REAL");

                    b.Property<float>("PP1")
                        .HasColumnType("REAL");

                    b.Property<float>("PP2")
                        .HasColumnType("REAL");

                    b.Property<float>("PP3")
                        .HasColumnType("REAL");

                    b.Property<float>("PP4")
                        .HasColumnType("REAL");

                    b.Property<float>("PierceCuttingOxygenPressure")
                        .HasColumnType("REAL");

                    b.Property<int>("PierceCuttingSpeedChange")
                        .HasColumnType("INTEGER");

                    b.Property<float>("PierceFuelGasPressure")
                        .HasColumnType("REAL");

                    b.Property<float>("PierceHeatingOxygenPressure")
                        .HasColumnType("REAL");

                    b.Property<int>("PierceHeight")
                        .HasColumnType("INTEGER");

                    b.Property<float>("PierceTime")
                        .HasColumnType("REAL");

                    b.Property<float>("PreHeatFuelGasPressure")
                        .HasColumnType("REAL");

                    b.Property<float>("PreHeatHeatingOxygenPressure")
                        .HasColumnType("REAL");

                    b.Property<int>("PreHeatHeight")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PreHeatTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Remark")
                        .HasColumnType("TEXT");

                    b.Property<float>("Thickness")
                        .HasColumnType("REAL");

                    b.Property<int?>("idCutDataParent")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GasId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("NozzleId");

                    b.ToTable("CuttingData");
                });

            modelBuilder.Entity("BlazorServerHost.Data.Models.CuttingData.Gas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("GasId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Gas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0b308f5f-4a5f-4b05-b984-7e7d71a59427"),
                            GasId = 0,
                            Name = "Propan"
                        },
                        new
                        {
                            Id = new Guid("b3bd2527-f662-45f3-8253-14a9c4ed7dba"),
                            GasId = 1,
                            Name = "Acetylene"
                        },
                        new
                        {
                            Id = new Guid("0a47c070-14c2-4b41-a0ae-17f252a59ec0"),
                            GasId = 2,
                            Name = "NaturalGas"
                        });
                });

            modelBuilder.Entity("BlazorServerHost.Data.Models.CuttingData.Material", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Material");

                    b.HasData(
                        new
                        {
                            Id = new Guid("474ff776-f1a0-4360-af07-a43e9a0bb4da"),
                            Name = "Mild Steel"
                        });
                });

            modelBuilder.Entity("BlazorServerHost.Data.Models.CuttingData.Nozzle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImgPathBegin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImgPathEnd")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Nozzle");

                    b.HasData(
                        new
                        {
                            Id = new Guid("16fe64a1-b634-4d9b-ab1d-fe162aca6c3d"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ARC 3-40"
                        },
                        new
                        {
                            Id = new Guid("c87ab98e-2c5e-491d-8e4d-181f356d0df6"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ARC 3-70"
                        },
                        new
                        {
                            Id = new Guid("83e71cc5-ac88-45ee-933d-73aa45a00e49"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PRC 5-40"
                        },
                        new
                        {
                            Id = new Guid("6bf0fc51-cf29-47ee-89aa-c4e56361ee4a"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PRC 5-70"
                        },
                        new
                        {
                            Id = new Guid("1fd87b73-09ba-40b1-b21f-7a33bcb29f4d"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ASF 3-5"
                        },
                        new
                        {
                            Id = new Guid("4f51f31b-39f2-44ce-89e6-206bf2ea5dbf"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ASF 6-10"
                        },
                        new
                        {
                            Id = new Guid("26f51de0-61b7-417b-90d4-b034395b6040"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ASF 10-25"
                        },
                        new
                        {
                            Id = new Guid("1ab52a1a-6d49-4559-9e82-6a919f2fba15"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ASF 25-40"
                        },
                        new
                        {
                            Id = new Guid("8ad4c91d-d28a-4483-aa11-2851508bc71b"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ASF 40-60"
                        },
                        new
                        {
                            Id = new Guid("d615c277-bb82-470a-aa8a-5cdb4bd63424"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ASF 60-100"
                        },
                        new
                        {
                            Id = new Guid("f8f1c2ba-3ab5-4820-a237-b419c071aff4"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ASF 100-150"
                        },
                        new
                        {
                            Id = new Guid("3584be73-4d68-4106-ac40-f92f01828edb"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ASF 150-230"
                        },
                        new
                        {
                            Id = new Guid("3a768ddc-34eb-4394-8cdf-7d5813a4c895"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ASF 230-300"
                        },
                        new
                        {
                            Id = new Guid("c480bc52-e55e-4be1-9cc3-9566c9ecc01e"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 3-6"
                        },
                        new
                        {
                            Id = new Guid("8998c991-1bf9-4728-8eb8-c1fc538a39e2"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 7-15"
                        },
                        new
                        {
                            Id = new Guid("0d27f707-bb73-49a7-82a7-6bf1a32bcd7c"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 15-25"
                        },
                        new
                        {
                            Id = new Guid("e3fe9592-3e0c-4eac-95b8-6cab078a9a1e"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 25-40"
                        },
                        new
                        {
                            Id = new Guid("db9cae5b-113b-467e-b52c-e3d9b61f948c"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 40-60"
                        },
                        new
                        {
                            Id = new Guid("ef462061-71a2-4b64-8b76-e60ebb41cbe6"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 60-100"
                        },
                        new
                        {
                            Id = new Guid("6786a9bf-1e8c-4a6f-b13a-3705da73469e"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 100-150"
                        },
                        new
                        {
                            Id = new Guid("73add5e2-3cef-4d25-b124-06bbf2881089"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 100-200"
                        },
                        new
                        {
                            Id = new Guid("7305f4b0-7515-41a8-bf1a-7f3ad03cf715"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 150-200"
                        },
                        new
                        {
                            Id = new Guid("a778b0f5-66c7-4a01-b340-b5b5843b6d5c"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 200-250"
                        },
                        new
                        {
                            Id = new Guid("efc1fb0b-3533-4c17-949b-605a5fc4d43c"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 250-300"
                        });
                });

            modelBuilder.Entity("BlazorServerHost.Data.Models.CuttingData.CuttingData", b =>
                {
                    b.HasOne("BlazorServerHost.Data.Models.CuttingData.Gas", "Gas")
                        .WithMany()
                        .HasForeignKey("GasId");

                    b.HasOne("BlazorServerHost.Data.Models.CuttingData.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId");

                    b.HasOne("BlazorServerHost.Data.Models.CuttingData.Nozzle", "Nozzle")
                        .WithMany()
                        .HasForeignKey("NozzleId");

                    b.Navigation("Gas");

                    b.Navigation("Material");

                    b.Navigation("Nozzle");
                });
#pragma warning restore 612, 618
        }
    }
}
