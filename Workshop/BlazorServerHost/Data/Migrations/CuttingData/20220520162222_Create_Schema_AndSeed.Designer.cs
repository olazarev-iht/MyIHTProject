// <auto-generated />
using System;
using BlazorServerHost.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorServerHost.Data.Migrations.CuttingData
{
    [DbContext(typeof(CuttingDataDbContext))]
    [Migration("20220520162222_Create_Schema_AndSeed")]
    partial class Create_Schema_AndSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("BlazorServerHost.Data.Models.CuttingData.APCCuttingParametersIHT", b =>
                {
                    b.Property<int>("ControlBits")
                        .HasColumnType("INTEGER");

                    b.Property<float>("CutCuttingOxygenPressure")
                        .HasColumnType("REAL");

                    b.Property<float>("CutFuelGasPressure")
                        .HasColumnType("REAL");

                    b.Property<float>("CutHeatingOxygenPressure")
                        .HasColumnType("REAL");

                    b.Property<int>("CutHeight")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CuttingSpeed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExtKey")
                        .HasColumnType("TEXT");

                    b.Property<int>("IgnitionFlameAdjustment")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Kerf")
                        .HasColumnType("REAL");

                    b.Property<int>("LeadInLength")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Material")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nozzle")
                        .HasColumnType("TEXT");

                    b.Property<float>("PI0")
                        .HasColumnType("REAL");

                    b.Property<float>("PI1")
                        .HasColumnType("REAL");

                    b.Property<int>("PP0")
                        .HasColumnType("INTEGER");

                    b.Property<float>("PP1")
                        .HasColumnType("REAL");

                    b.Property<float>("PP2")
                        .HasColumnType("REAL");

                    b.Property<float>("PP3")
                        .HasColumnType("REAL");

                    b.Property<float>("PP4")
                        .HasColumnType("REAL");

                    b.Property<float>("PierceCuttingOxygenPressure")
                        .HasColumnType("REAL");

                    b.Property<int>("PierceCuttingSpeedChange")
                        .HasColumnType("INTEGER");

                    b.Property<float>("PierceFuelGasPressure")
                        .HasColumnType("REAL");

                    b.Property<float>("PierceHeatingOxygenPressure")
                        .HasColumnType("REAL");

                    b.Property<int>("PierceHeight")
                        .HasColumnType("INTEGER");

                    b.Property<float>("PierceTime")
                        .HasColumnType("REAL");

                    b.Property<float>("PreHeatFuelGasPressure")
                        .HasColumnType("REAL");

                    b.Property<float>("PreHeatHeatingOxygenPressure")
                        .HasColumnType("REAL");

                    b.Property<int>("PreHeatHeight")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PreHeatTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Remark")
                        .HasColumnType("TEXT");

                    b.Property<int>("Thickness")
                        .HasColumnType("INTEGER");

                    b.Property<int>("idGas")
                        .HasColumnType("INTEGER");

                    b.ToTable("APCCuttingParametersIHT");
                });

            modelBuilder.Entity("BlazorServerHost.Data.Models.CuttingData.CuttingData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("(lower(hex(randomblob(4))) || '-' || lower(hex(randomblob(2))) || '-4' || substr(lower(hex(randomblob(2))),2) || '-' || substr('89ab',abs(random()) % 4 + 1, 1) || substr(lower(hex(randomblob(2))),2) || '-' || lower(hex(randomblob(6))))");

                    b.Property<int>("Controlbits")
                        .HasColumnType("INTEGER");

                    b.Property<float>("CutCuttingOxygenPressure")
                        .HasColumnType("REAL");

                    b.Property<float>("CutFuelGasPressure")
                        .HasColumnType("REAL");

                    b.Property<float>("CutHeatingOxygenPressure")
                        .HasColumnType("REAL");

                    b.Property<int>("CutHeight")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CuttingSpeed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExtKey")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("GasId")
                        .HasColumnType("TEXT");

                    b.Property<int>("IgnitionFlameAdjustment")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Kerf")
                        .HasColumnType("REAL");

                    b.Property<int>("LeadInLength")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("MaterialId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("NozzleId")
                        .HasColumnType("TEXT");

                    b.Property<float>("PI0")
                        .HasColumnType("REAL");

                    b.Property<float>("PI1")
                        .HasColumnType("REAL");

                    b.Property<float>("PP0")
                        .HasColumnType("REAL");

                    b.Property<float>("PP1")
                        .HasColumnType("REAL");

                    b.Property<float>("PP2")
                        .HasColumnType("REAL");

                    b.Property<float>("PP3")
                        .HasColumnType("REAL");

                    b.Property<float>("PP4")
                        .HasColumnType("REAL");

                    b.Property<float>("PierceCuttingOxygenPressure")
                        .HasColumnType("REAL");

                    b.Property<int>("PierceCuttingSpeedChange")
                        .HasColumnType("INTEGER");

                    b.Property<float>("PierceFuelGasPressure")
                        .HasColumnType("REAL");

                    b.Property<float>("PierceHeatingOxygenPressure")
                        .HasColumnType("REAL");

                    b.Property<int>("PierceHeight")
                        .HasColumnType("INTEGER");

                    b.Property<float>("PierceTime")
                        .HasColumnType("REAL");

                    b.Property<float>("PreHeatFuelGasPressure")
                        .HasColumnType("REAL");

                    b.Property<float>("PreHeatHeatingOxygenPressure")
                        .HasColumnType("REAL");

                    b.Property<int>("PreHeatHeight")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PreHeatTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Remark")
                        .HasColumnType("TEXT");

                    b.Property<float>("Thickness")
                        .HasColumnType("REAL");

                    b.Property<Guid?>("idCutDataParent")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GasId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("NozzleId");

                    b.ToTable("CuttingData");
                });

            modelBuilder.Entity("BlazorServerHost.Data.Models.CuttingData.Gas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("GasId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Gas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2954fb92-ba01-43ee-9f49-37f74870a5bf"),
                            GasId = 0,
                            Name = "Propan"
                        },
                        new
                        {
                            Id = new Guid("324929b4-cc09-4a9c-a766-af62cd9e8dc3"),
                            GasId = 1,
                            Name = "Acetylene"
                        },
                        new
                        {
                            Id = new Guid("d9b6ac85-21e1-4eaa-8c4b-1ea325488592"),
                            GasId = 2,
                            Name = "NaturalGas"
                        });
                });

            modelBuilder.Entity("BlazorServerHost.Data.Models.CuttingData.Material", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Material");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7bec44e6-f1a6-4351-9d8e-83110c12ed47"),
                            Name = "Mild Steel"
                        });
                });

            modelBuilder.Entity("BlazorServerHost.Data.Models.CuttingData.Nozzle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImgPathBegin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImgPathEnd")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Nozzle");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f3073d90-aa2a-4615-9d6c-678c4d3d67ca"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ARC 3-40"
                        },
                        new
                        {
                            Id = new Guid("6049d13d-14ab-4104-a0a3-ea8bdccbea7d"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ARC 3-70"
                        },
                        new
                        {
                            Id = new Guid("16bdec60-b332-4990-89be-6d298bd33248"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PRC 5-40"
                        },
                        new
                        {
                            Id = new Guid("6f9d6e4b-0b74-4f4b-86dc-c5f06d497c8d"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PRC 5-70"
                        },
                        new
                        {
                            Id = new Guid("f76245f5-be8a-4679-86c2-16ccab10a47f"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ASF 3-5"
                        },
                        new
                        {
                            Id = new Guid("a5d53216-522a-478e-ba8c-72466306adbd"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ASF 6-10"
                        },
                        new
                        {
                            Id = new Guid("49bf3360-33ec-49e8-860a-51663cb4fe60"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ASF 10-25"
                        },
                        new
                        {
                            Id = new Guid("83fdb324-00fd-480d-b11b-3dfc9274f3c8"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ASF 25-40"
                        },
                        new
                        {
                            Id = new Guid("0d01574b-51b9-4d75-9e17-a6a3c30da53a"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ASF 40-60"
                        },
                        new
                        {
                            Id = new Guid("48d71e0e-eb05-455d-bfc3-01d472f4691b"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ASF 60-100"
                        },
                        new
                        {
                            Id = new Guid("3c192581-5a28-4b30-b28f-5d26ae83fc98"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ASF 100-150"
                        },
                        new
                        {
                            Id = new Guid("ef11c212-e58b-402b-9b80-d82aaa33a09c"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ASF 150-230"
                        },
                        new
                        {
                            Id = new Guid("ca396626-2734-459b-bdce-ffcee3358910"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "ASF 230-300"
                        },
                        new
                        {
                            Id = new Guid("282d6eb3-b05d-498b-a4b4-5eb48e32db10"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 3-6"
                        },
                        new
                        {
                            Id = new Guid("5186f845-a0cf-4141-b090-6b8614331b9c"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 7-15"
                        },
                        new
                        {
                            Id = new Guid("240a7084-18a6-46f6-b64b-6564edde0948"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 15-25"
                        },
                        new
                        {
                            Id = new Guid("fd943b93-4da2-458f-9e3d-fb952e2599a4"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 25-40"
                        },
                        new
                        {
                            Id = new Guid("e4fe487c-69d8-42a5-975f-c2cadf0a61ea"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 40-60"
                        },
                        new
                        {
                            Id = new Guid("0f772844-faae-418f-9da6-ed08a43c5893"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 60-100"
                        },
                        new
                        {
                            Id = new Guid("7fe3388c-8739-4f8c-9252-7abe83249571"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 100-150"
                        },
                        new
                        {
                            Id = new Guid("65cc1e77-6971-4c93-a08a-a4303e324018"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 100-200"
                        },
                        new
                        {
                            Id = new Guid("6626573c-e195-4a1c-987c-64861b9a9f1f"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 150-200"
                        },
                        new
                        {
                            Id = new Guid("7a0cfbdd-d9a2-41bc-b510-1e614c7d34ba"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 200-250"
                        },
                        new
                        {
                            Id = new Guid("63e6bde7-d079-4439-85be-c586f2506963"),
                            ImgPathBegin = "",
                            ImgPathEnd = "",
                            Name = "PSF 250-300"
                        });
                });

            modelBuilder.Entity("BlazorServerHost.Data.Models.CuttingData.CuttingData", b =>
                {
                    b.HasOne("BlazorServerHost.Data.Models.CuttingData.Gas", "Gas")
                        .WithMany()
                        .HasForeignKey("GasId");

                    b.HasOne("BlazorServerHost.Data.Models.CuttingData.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId");

                    b.HasOne("BlazorServerHost.Data.Models.CuttingData.Nozzle", "Nozzle")
                        .WithMany()
                        .HasForeignKey("NozzleId");

                    b.Navigation("Gas");

                    b.Navigation("Material");

                    b.Navigation("Nozzle");
                });
#pragma warning restore 612, 618
        }
    }
}
